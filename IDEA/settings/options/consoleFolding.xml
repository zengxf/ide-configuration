<application>
  <component name="ConsoleFoldingSettings">
    <option name="addedPositive">
      <list>
        <option value="Post" />
      </list>
    </option>
    <option name="removedPositive">
      <list>
        <option value="at java.security.ProtectionDomain$1.doIntersectionPrivilege(" />
        <option value="at org.springframework.web.filter." />
        <option value="at java.lang.reflect.Constructor.newInstance(" />
        <option value="at org.codehaus.groovy." />
        <option value="at org.springframework.web.servlet." />
        <option value="at com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(" />
        <option value="at com.intellij.jpa." />
        <option value="at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(" />
        <option value="at java.util.stream.ReferencePipeline$" />
        <option value="at java.awt.Component.processMouseEvent(" />
        <option value="at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(" />
        <option value="at org.junit.runners." />
        <option value="at java.util.stream.AbstractPipeline.copyInto(" />
        <option value="at java.awt.Component.processEvent(" />
        <option value="at javax.swing.plaf.basic.BasicComboPopup$Handler.mouseReleased(" />
        <option value="at javax.swing.AbstractButton$Handler.actionPerformed(" />
        <option value="at org.junit.Assert.failNotSame(" />
        <option value="at java.security.AccessController.doPrivileged(Native Method)" />
        <option value="at javax.swing.DefaultButtonModel.setPressed(" />
        <option value="at com.jgoodies.binding.beans.ExtendedPropertyChangeSupport.firePropertyChange0(" />
        <option value="at java.awt.Container.dispatchEventImpl(" />
        <option value="at java.util.stream.AbstractPipeline.evaluate(" />
        <option value="at javax.swing.AbstractButton.fireActionPerformed(" />
        <option value="at java.awt.EventQueue" />
        <option value="at org.junit.runner.JUnitCore." />
        <option value="at java.awt.EventQueue.dispatchEventImpl(" />
        <option value="at org.testng.TestRunner." />
        <option value="com.intellij.openapi.command.WriteCommandAction" />
        <option value="at sun.rmi." />
        <option value="at aQute.launcher." />
        <option value="at java.awt.EventDispatchThread" />
        <option value="at aQute.junit." />
        <option value="at org.springframework.web.method." />
        <option value="at com.intellij.testFramework.UsefulTestCase" />
        <option value="at org.testng.SuiteRunner." />
        <option value="at org.junit.Assert.failSame(" />
        <option value="at junit.framework.TestResult" />
        <option value="at com.intellij.testFramework.fixtures.impl.CodeInsightTestFixtureImpl.collectAndCheckHighlighting(" />
        <option value="at junit.framework.TestCase.run" />
        <option value="at sun.reflect." />
        <option value="at java.security.AccessControlContext$1.doIntersectionPrivilege(" />
        <option value="at junit.framework.TestSuite.run" />
        <option value="at com.intellij.openapi.application.impl.ApplicationImpl.runWriteAction(" />
        <option value="at java.lang.reflect.Method.invoke(" />
        <option value="at java.awt.Component.dispatchEventImpl(" />
        <option value="at java.awt.Container.processEvent(" />
        <option value="at com.intellij.testFramework.EdtTestUtil" />
        <option value="at com.intellij.util.messages.impl.MessageBus" />
        <option value="at java.util.stream.AbstractPipeline.wrapAndCopyInto(" />
        <option value="at java.rmi." />
        <option value="at com.intellij.testFramework.fixtures.impl.CodeInsightTestFixtureImpl.access$" />
        <option value="at java.util.concurrent." />
        <option value="at com.intellij.testFramework.fixtures.impl.CodeInsightTestFixtureImpl$" />
        <option value="at org.junit.Assert.fail(" />
        <option value="at org.junit.internal.runners." />
        <option value="at org.hibernate." />
        <option value="at java.awt.Window.dispatchEventImpl(" />
        <option value="at com.intellij.junit4." />
        <option value="at org.eclipse.persistence.internal.jpa." />
        <option value="at javax.swing.JComponent.processMouseEvent(" />
        <option value="at java.util.Spliterators$" />
        <option value="at java.awt.Component.dispatchEvent(" />
        <option value="at org.testng.TestNG.run" />
        <option value="at org.junit.internal.ComparisonCriteria.arrayEquals(" />
        <option value="at org.junit.Assert.assert" />
        <option value="at com.sun.proxy.$Proxy" />
        <option value="at com.intellij.rt.execution." />
        <option value="at javax.swing.plaf.basic.BasicMenuItemUI" />
        <option value="at javax.swing.DefaultButtonModel.fireActionPerformed(" />
        <option value="at java.awt.event.InvocationEvent.dispatch(" />
        <option value="at com.intellij.junit3." />
        <option value="at com.intellij.testFramework.ExpectedHighlightingData" />
        <option value="at com.intellij.openapi.application.RunResult.run(" />
        <option value="at org.junit.Assert.internalArrayEquals(" />
        <option value="at java.awt.LightweightDispatcher." />
        <option value="at groovy." />
        <option value="at java.util.stream.ReduceOps$" />
        <option value="at com.intellij.testFramework.fixtures.impl.CodeInsightTestFixtureImpl.checkResultByFile(" />
        <option value="at javax.swing.AbstractButton.doClick(" />
        <option value="at org.testng.internal." />
      </list>
    </option>
    <option name="removedNegative">
      <list>
        <option value="at org.codehaus.groovy.runtime.DefaultGroovyMethods." />
        <option value="at org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods." />
        <option value="at org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport." />
      </list>
    </option>
  </component>
</application>